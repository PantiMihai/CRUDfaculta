@using CRUDfaculta.Controllers
@using CRUDfaculta.Enum
@using CRUDfaculta.ViewModels

@inject EmployeeController EmployeeController
@inject ISnackbar SnackBar

<EditForm Model="@model" OnValidSubmit="OnValidSubmit">
	<MudDialog>
		<DialogContent>
			<DataAnnotationsValidator/>
			<MudGrid Class="mb-5">
				<MudItem xs="9"> 
					<MudTextField Label="Name" Variant="Variant.Outlined" @bind-Value="model.FullName" For="@(()=>model.FullName)" />
				</MudItem>
				<MudItem xs="3">
					<MudTextField Label="Age" Variant="Variant.Outlined" @bind-Value="model.Age" For="@(()=>model.Age)" />
				</MudItem>
			</MudGrid>
			<MudDatePicker Label="Birth Date" Class="mb-5" Variant="Variant.Outlined" @bind-Date="_birthDate" />
			<MudTextField Label="Department" Class="mb-5" Variant="Variant.Outlined" @bind-Value="model.Department" For="@(()=>model.Department)" />
			<MudTextField Label="Phone Number" Variant="Variant.Outlined" @bind-Value="model.PhoneNumber" For="@(()=>model.PhoneNumber)" />
		</DialogContent>
		<DialogActions>
			<MudButton OnClick="Cancel">Cancel</MudButton>
			<MudButton ButtonType="ButtonType.Submit" Color="Color.Primary">Save</MudButton>
		</DialogActions>
	</MudDialog>
</EditForm>

@code{
	[Parameter]
	public UiActionEnum Action { get; set; } = UiActionEnum.Insert;

	[CascadingParameter]
	private MudDialogInstance MudDialog { get; set; }

	[Parameter]
	public DateTime? _birthDate { get; set; } = DateTime.Today;

	[Parameter]
	public EmployeeViewModel model { get; set; } = new EmployeeViewModel();

	private async Task OnValidSubmit(EditContext editContext)
	{
		if (_birthDate is not null)
		{
			model.BirthDate = _birthDate.Value;
		}
		if (Action == UiActionEnum.Insert)
		{
			CreateEmployee();
		}
		else if (Action == UiActionEnum.Update)
		{
			EditEmployee();
		}
	}


	private void CreateEmployee()
	{
		var result = EmployeeController.CreateNewEmployee(model);
		if (result)
		{
			SnackBar.Add("Employee Created Succesfully", Severity.Success);
			MudDialog.Close();
		}
		else
		{
			SnackBar.Add("Failed to create employee", Severity.Error);
		}
	}

	private void EditEmployee()
	{
		var result = EmployeeController.EditEmployee(model);
		if (result)
		{
			SnackBar.Add("Employee updated Succesfully", Severity.Success);
			MudDialog.Close();
		}
		else
		{
			SnackBar.Add("Failed to edit employee", Severity.Error);
		}
	}

	private void Cancel()
	{
		MudDialog.Cancel();
	}

}